namespace CSharpCADTests;

[TestFixture]
public class ProjectTests
{
    [SetUp]
    public void Setup()
    {
    }

    [Test]
    public void TestProjectDefaults()
    {
        var result = Project(new Geom3());

        result = Project(Torus(outerSegments: 4));
        Assert.DoesNotThrow(() => result.Validate());
        var pts = result.ToPoints();
        var exp = new Vec2[] {
            new Vec2(0, -2.9999933333333333),
            new Vec2(0, -5.000013333333333),
            new Vec2(0, 5.000013333333333),
            new Vec2(5.000013333333333, 0),
            new Vec2(0, 2.9999933333333333),
            new Vec2(-2.9999933333333333, 0),
            new Vec2(2.9999933333333333, 0),
            new Vec2(-5.000013333333333, 0)
          };
        Assert.IsTrue(Helpers.CompareArraysNEVec2(pts, exp));
    }

    [Test]
    public void TestProjectXandYAxis()
    {
        var result = Project(Torus(outerSegments: 4), axis: new Vec3(1, 0, 0), origin: new Vec3(1, 0, 0));
        Assert.DoesNotThrow(() => result.Validate());
        var pts = result.ToPoints();
        var exp = new Vec2[] {
          new Vec2(-1.0000200000000001, -3.999986666666667),
          new Vec2(-0.8314600000000001, 4.555553333333334),
          new Vec2(-0.9807933333333334, -4.1951),
          new Vec2(-0.7070933333333335, 4.707126666666667),
          new Vec2(-0.9238600000000001, -4.382700000000001),
          new Vec2(-0.5555666666666668, 4.831446666666667),
          new Vec2(-0.8314600000000001, -4.555553333333334),
          new Vec2(-0.3826666666666667, 4.923893333333334),
          new Vec2(-0.7070933333333335, -4.707126666666667),
          new Vec2(-0.19511333333333336, 4.98078),
          new Vec2(-0.5555666666666668, -4.831446666666667),
          new Vec2(0, 5.000006666666668),
          new Vec2(-0.3826666666666667, -4.923893333333334),
          new Vec2(0.19511333333333336, 4.98078),
          new Vec2(-0.19511333333333336, -4.98078),
          new Vec2(0.3826666666666667, 4.923893333333334),
          new Vec2(0, -5.000006666666668),
          new Vec2(0.5555666666666668, 4.831446666666667),
          new Vec2(0.19511333333333336, -4.98078),
          new Vec2(0.7070933333333335, 4.707126666666667),
          new Vec2(0.3826666666666667, -4.923893333333334),
          new Vec2(0.8314600000000001, 4.555553333333334),
          new Vec2(0.5555666666666668, -4.831446666666667),
          new Vec2(0.9238600000000001, 4.382700000000001),
          new Vec2(0.7070933333333335, -4.707126666666667),
          new Vec2(0.9807933333333334, 4.1951),
          new Vec2(0.8314600000000001, -4.555553333333334),
          new Vec2(1.0000200000000001, 3.999986666666667),
          new Vec2(1.0000200000000001, -3.999986666666667),
          new Vec2(0.9238600000000001, -4.382700000000001),
          new Vec2(0.9807933333333334, -4.1951),
          new Vec2(-1.0000200000000001, 3.999986666666667),
          new Vec2(-0.9807933333333334, 4.1951),
          new Vec2(-0.9238600000000001, 4.382700000000001)
        };
        Assert.IsTrue(Helpers.CompareArraysNEVec2(pts, exp));

        result = Project(Torus(outerSegments: 4), axis: new Vec3(0, 1, 0), origin: new Vec3(0, -1, 0));
        Assert.DoesNotThrow(() => result.Validate());
        pts = result.ToPoints();
        exp = new Vec2[] {
          new Vec2(3.999986666666667, -1.0000200000000001),
          new Vec2(-4.555553333333334, -0.8314600000000001),
          new Vec2(4.1951, -0.9807933333333334),
          new Vec2(-4.707126666666667, -0.7070933333333335),
          new Vec2(4.382700000000001, -0.9238600000000001),
          new Vec2(-4.831446666666667, -0.5555666666666668),
          new Vec2(4.555553333333334, -0.8314600000000001),
          new Vec2(-4.923893333333334, -0.3826666666666667),
          new Vec2(4.707126666666667, -0.7070933333333335),
          new Vec2(-4.98078, -0.19511333333333336),
          new Vec2(4.831446666666667, -0.5555666666666668),
          new Vec2(-5.000006666666668, 0),
          new Vec2(4.923893333333334, -0.3826666666666667),
          new Vec2(-4.98078, 0.19511333333333336),
          new Vec2(4.98078, -0.19511333333333336),
          new Vec2(-4.923893333333334, 0.3826666666666667),
          new Vec2(5.000006666666668, 0),
          new Vec2(-4.831446666666667, 0.5555666666666668),
          new Vec2(4.98078, 0.19511333333333336),
          new Vec2(-4.707126666666667, 0.7070933333333335),
          new Vec2(4.923893333333334, 0.3826666666666667),
          new Vec2(-4.555553333333334, 0.8314600000000001),
          new Vec2(4.831446666666667, 0.5555666666666668),
          new Vec2(-4.382700000000001, 0.9238600000000001),
          new Vec2(4.707126666666667, 0.7070933333333335),
          new Vec2(-4.1951, 0.9807933333333334),
          new Vec2(4.555553333333334, 0.8314600000000001),
          new Vec2(-3.999986666666667, 1.0000200000000001),
          new Vec2(3.999986666666667, 1.0000200000000001),
          new Vec2(4.382700000000001, 0.9238600000000001),
          new Vec2(4.1951, 0.9807933333333334),
          new Vec2(-3.999986666666667, -1.0000200000000001),
          new Vec2(-4.1951, -0.9807933333333334),
          new Vec2(-4.382700000000001, -0.9238600000000001)
        };
        Assert.IsTrue(Helpers.CompareArraysNEVec2(pts, exp));
    }
}